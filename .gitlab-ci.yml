variables:
  DOCKER_REPOSITORY: mendersoftware/create-artifact-worker

stages:
  - test_prep
  - test
  - build
  - publish

include:
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-golang-unittests.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-docker-build.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-github-status-updates.yml'

test:unit:
  image: golang:1.13

publish:unittests:
  image: golang:1.13-alpine3.12

test:static:
  stage: test
  needs: []
  except:
    - /^saas-[a-zA-Z0-9.]+$/
  image: golang:1.13
  before_script:
    # Install cyclomatic dependency analysis tool
    # - GO111MODULE=off go get -u github.com/fzipp/gocyclo/...
    # Install compile dependencies
    - if [ -f deb-requirements.txt ]; then
        apt-get -qq update &&
        apt install -yq $(cat deb-requirements.txt);
      fi
    # Prepare GOPATH for the build
    - mkdir -p /go/src/github.com/mendersoftware
    - cp -r ${CI_PROJECT_DIR} /go/src/github.com/mendersoftware/${CI_PROJECT_NAME}
    - cd /go/src/github.com/mendersoftware/${CI_PROJECT_NAME}
  script:
    # create-artifact-worker 1.0.x predates go modules
    - export GO111MODULE=off
    # Test if code was formatted with 'go fmt'
    # Command will format code and return modified files
    # fail if any have been modified.
    - if [ -n "$(go fmt ./...)" ]; then echo 'Code is not formatted with "go fmt"'; false; fi
    # Perform static code analysys
    - go vet `go list ./... | grep -v vendor`
    # Fail builds when the cyclomatic complexity reaches 20 or more
    # - gocyclo -over 20 `find . -iname '*.go' | grep -v 'vendor' | grep -v '_test.go'`
